/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define LOWER  1
#define SHIFT_LOWER 2
#define RAISE  3

/* Uncomment this block if using RGB
&led_strip {
       chain-length = <6>;
       // chain-length = <38>; // Uncomment if using both per-key and underglow LEDs
       // chain-length = <32>; // Uncomment if using only per-key LEDs.
};
 */


/ {
       keymap {
              compatible = "zmk,keymap";

              default_layer {
        bindings = <
         &kp ESC   &kp N1      &kp N2     &kp N3      &kp N4      &kp N5                             &kp N6 &kp N7     &kp N8    &kp N9     &kp N0        &kp GRAVE
         &kp TAB   &kp Q       &kp W      &kp E       &kp R       &kp T                              &kp Y  &kp U      &kp I     &kp O      &kp P         &kp BSPC
         &kp LCTRL &kp A       &kp S      &kp D       &kp F       &kp G                              &kp H  &kp J      &kp K     &kp L      &kp SEMI      &kp SQT
         &kp LSHFT &kp Z       &kp X      &kp C       &kp V       &kp B     &kp RET         &kp RBKT &kp N  &kp M      &kp COMMA &kp PERIOD &kp SLASH     &kp FSLH
         &kp RSHFT &kp PSCRN   &to GAMING &kp LALT    &kp LGUI    &mo LOWER &kp SPACE       &kp RET  &kp LC(LA(LSHFT)) &mo RAISE &kp LEFT &kp DOWN &kp UP &kp RIGHT

                     >;
              };

              lower_layer {
                     bindings = <
        &trans &trans &trans &trans &trans &trans                    &trans   &trans   &trans  &trans    &trans   &trans
        &trans &trans &kp N7 &kp N8 &kp N9 &trans                    &trans   &trans   &trans  &trans    &trans   &kp DEL
        &trans &trans &kp N4 &kp N5 &kp N6 &trans                    &kp LEFT &kp DOWN &kp UP  &kp RIGHT &trans   &trans
        &trans &kp N0 &kp N1 &kp N2 &kp N3 &trans &trans      &trans &kp F6   &kp F7   &kp F8  &kp F9    &kp F10  &kp F11                     
        &trans &trans &trans &trans &trans &trans &trans      &trans &trans   &trans   &trans  &trans    &trans   &trans
             >;
              shift_lower_layer {
                     bindings = <
        &trans     &trans       &trans       &trans       &trans       &trans                    &trans   &trans   &trans  &trans    &trans   &trans
        &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4              &trans   &trans   &trans  &trans    &trans   &kp DEL
        &trans     &trans       &trans       &trans       &trans       &trans                    &kp LEFT &kp DOWN &kp UP  &kp RIGHT &trans   &trans
        &trans     &kp F1       &kp F2       &kp F3       &kp F4       &kp F5 &trans      &trans &kp F6   &kp F7   &kp F8  &kp F9    &kp F10  &kp F11                     
        &trans     &trans       &trans       &trans       &trans       &trans &trans      &trans &trans   &trans   &trans  &trans    &trans   &trans
             >;
              };
              raise_layer {
        bindings = <
                            &trans &kp EXCL &kp AT  &kp HASH &kp DLLR &kp PRCNT                  &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LBKT &kp RBKT &trans
                            &trans &trans   &trans  &trans   &trans   &trans                     &trans    &trans    &trans          &kp LBKT &kp RBKT &kp DEL
                            &trans &trans   &kp DQT &kp DOT  &kp LT   &kp GT                     &kp COLON &kp LBRC  &kp RBRC        &kp LPAR &kp RPAR &kp DEL
                            &trans &trans   &trans  &trans   &trans   &kp PIPE &trans     &trans &kp EQUAL &kp PLUS  &kp MINUS      &kp UNDER &kp BSLH &trans 
                            &trans &trans   &trans  &trans   &trans   &trans  &trans      &trans &trans    &trans    &kp C_PREV      &kp C_PP &kp C_PP &kp C_NEXT
                     >;
              };
       };

  /* combos { */
  /*   compatible = "zmk,combos"; */
  /*   combo_gaming { */
  /*     timeout-ms = <50>; */
  /*     bindings = <&to GAMING>; */
  /*     key-positions = <36 37 38 39>; // positions of A S D F */
  /*   }; */
  /* }; */
  /**/
  behaviors {
      /* hml: home_row_mod_left { */
      /*     compatible = "zmk,behavior-hold-tap"; */
      /*     #binding-cells = <2>; */
      /*     flavor = "balanced"; */
      /*     require-prior-idle-ms = <120>; */
      /*     tapping-term-ms = <250>; */
      /*     quick-tap-ms = <175>; */
      /*     bindings = <&kp>, <&kp>; */
      /*     hold-trigger-key-positions = < */
      /*       22 23 24 25 26 27 */
      /*       36 37 38 39 40 41 */
      /*       50 51 52 53 54 55 */
      /*     >; */
      /*     hold-trigger-on-release; */
      /* }; */
      /**/
      /* hmr: home_row_mod_right { */
      /*     compatible = "zmk,behavior-hold-tap"; */
      /*     #binding-cells = <2>; */
      /*     flavor = "balanced"; */
      /*     require-prior-idle-ms = <120>; */
      /*     tapping-term-ms = <250>; */
      /*     quick-tap-ms = <175>; */
      /*     bindings = <&kp>, <&kp>; */
      /*     hold-trigger-key-positions = < */
      /*       14 15 16 17 18 19 */
      /*       28 29 30 31 32 33 */
      /*       42 43 44 45 46 47 */
      /*     >; */
      /*     hold-trigger-on-release; */
      /* }; */
      lower_or_shifted: lower_or_shifted {
          compatible = "zmk,behavior-mod-morph";
          label = "LOWER_OR_SHIFTED";
          #binding-cells = <0>;
          bindings = <&mo LOWER>, <&mo SHIFT_LOWER>;
          mods = <(MOD_LSFT|MOD_RSFT)>;
      };
  };
};

